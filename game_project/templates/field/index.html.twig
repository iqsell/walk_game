<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Бродилка</title>
    <style>
        /* Общие стили */
        .center-text {
            text-align: center;
            margin-top: 20px;
        }

        .game-field {
            width: 100%;
            max-width: 1400px;
            height: auto;
            display: block;
            margin: 0 auto;
        }

        /* Стиль фишек */
        .chip {
            position: absolute;
            width: 50px; /* Размер фишки */
            height: 50px; /* Размер фишки */
        }

        .chip_bot {
            background-image: url('public/images/chip_bot.png');
            background-size: cover;
        }

        .chip_player {
            background-image: url('public/images/chip_player.png');
            background-size: cover;
        }

        /* Стиль кубиков */
        .dice {
            width: 50px;
            height: 50px;
            display: inline-block;
            background-size: cover;
            margin: 0 10px;
        }

        /* Стиль помощи */
        .help-img {
            width: 100%;
            max-width: 400px;
            height: auto;
            display: block;
            margin: 0 auto;
        }
    </style>
</head>
<body>
<h1>Бродилка</h1>
<!-- Основная картинка -->
<div id="game-field">
    <img src="public/images/field.jpg" alt="Game Field" class="game-field">

    <!-- Фишки, -->
    {% for field in coordinates %}
        {% if field.isBot %}
            <div class="chip chip_bot" style="top: {{ field.y + 70 }}px; left: {{ field.x + 30 }}px;"></div>
        {% else %}
            <div class="chip chip_player" style="top: {{ field.y + 30 }}px; left: {{ field.x + 30 }}px;"></div>
        {% endif %}
    {% endfor %}

</div>

<!-- Кубики -->
<h2 class="center-text">Бросок кубиков</h2>
<div class="center-text">
    <button onclick="rollDice()">Бросить кубики</button>
</div>
<div id="dice-container" class="center-text">
    <div id="dice1" class="dice"></div>
    <div id="dice2" class="dice"></div>
</div>

<!-- Картинка с помощью -->
<h2 class="center-text">Помощь</h2>
<img src="public/images/help.jpg" alt="Help" class="help-img">

<script>
    function rollDice() {
        // Генерация случайных значений для двух кубиков
        var dice1 = Math.floor(Math.random() * 6) + 1; // 1-6
        var dice2 = Math.floor(Math.random() * 6) + 1; // 1-6
        var diceResult = dice1 + dice2;

        // Обновление изображений кубиков на экране
        document.getElementById('dice1').style.backgroundImage = 'url("public/images/dice' + dice1 + '.png")';
        document.getElementById('dice2').style.backgroundImage = 'url("public/images/dice' + dice2 + '.png")';

        // Отправка результата на сервер для обновления позиции игрока
        fetch('/update-player-position', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ diceResult: diceResult }),
        })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    console.error(data.error);
                    return;
                }

                // Обновление позиции игрока на поле
                const playerChip = document.querySelector('.chip_player');
                playerChip.style.top = (data.newCoordinates.y + 30) + 'px';
                playerChip.style.left = (data.newCoordinates.x + 30) + 'px';

                // Если есть сообщение о победе, показываем его
                if (data.winMessage) {
                    alert(data.winMessage);  // Покажем сообщение победы
                    showRestartButton(); // Покажем кнопку для перезапуска игры
                }
            })
            .catch(error => console.error('Ошибка:', error));
    }

    // Функция для отображения кнопки "Начать заново"
    function showRestartButton() {
        // Создаем кнопку "Начать заново"
        const restartButton = document.createElement('button');
        restartButton.textContent = 'Начать заново';
        restartButton.onclick = function() {
            resetGame();  // Вызовем функцию для сброса игры
        };

        // Стилевое позиционирование кнопки
        restartButton.style.position = 'absolute';
        restartButton.style.top = '350px'; // Отступ от верхней границы, под картинкой
        restartButton.style.left = '30px'; // Отступ слева
        restartButton.style.padding = '10px 20px';
        restartButton.style.backgroundColor = '#4CAF50'; // Зеленый цвет
        restartButton.style.color = 'white';
        restartButton.style.border = 'none';
        restartButton.style.borderRadius = '5px';
        restartButton.style.fontSize = '16px';

        // Добавляем кнопку на страницу
        document.body.appendChild(restartButton);
    }

    // Функция для сброса игры
    function resetGame() {
        fetch('/reset-game', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .then(response => response.json())
            .then(data => {
                alert(data.message);  // Показать сообщение о сбросе
                location.reload();  // Перезагружаем страницу для перезапуска игры
            })
            .catch(error => console.error('Ошибка:', error));
    }

</script>


</body>
</html>
